{"ast":null,"code":"import React from'react';import{useTimer}from'react-timer-hook';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MyTimer(_ref){var expiryTimestamp=_ref.expiryTimestamp;var _useTimer=useTimer({expiryTimestamp:expiryTimestamp,onExpire:function onExpire(){return console.warn('onExpire called');}}),seconds=_useTimer.seconds,minutes=_useTimer.minutes,hours=_useTimer.hours,days=_useTimer.days,isRunning=_useTimer.isRunning,start=_useTimer.start,pause=_useTimer.pause,resume=_useTimer.resume,restart=_useTimer.restart;return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"react-timer-hook \"}),/*#__PURE__*/_jsx(\"p\",{children:\"Timer Demo\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'100px'},children:[/*#__PURE__*/_jsx(\"span\",{children:days}),\":\",/*#__PURE__*/_jsx(\"span\",{children:hours}),\":\",/*#__PURE__*/_jsx(\"span\",{children:minutes}),\":\",/*#__PURE__*/_jsx(\"span\",{children:seconds})]}),/*#__PURE__*/_jsx(\"p\",{children:isRunning?'Running':'Not running'}),/*#__PURE__*/_jsx(\"button\",{onClick:start,children:\"Start\"}),/*#__PURE__*/_jsx(\"button\",{onClick:pause,children:\"Pause\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resume,children:\"Resume\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){// Restarts to 5 minutes timer\nvar time=new Date();time.setSeconds(time.getSeconds()+300);restart(time);},children:\"Restart\"})]});}export default function App(){var time=new Date();time.setSeconds(time.getSeconds()+600);// 10 minutes timer\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(MyTimer,{expiryTimestamp:time})});}","map":{"version":3,"sources":["/Users/silvandubach/Documents/code/js/wikitimer/src/App.js"],"names":["React","useTimer","MyTimer","expiryTimestamp","onExpire","console","warn","seconds","minutes","hours","days","isRunning","start","pause","resume","restart","textAlign","fontSize","time","Date","setSeconds","getSeconds","App"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,wFAEA,QAASC,CAAAA,OAAT,MAAsC,IAAnBC,CAAAA,eAAmB,MAAnBA,eAAmB,CACpC,cAUIF,QAAQ,CAAC,CAAEE,eAAe,CAAfA,eAAF,CAAmBC,QAAQ,CAAE,0BAAMC,CAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb,CAAN,EAA7B,CAAD,CAVZ,CACEC,OADF,WACEA,OADF,CAEEC,OAFF,WAEEA,OAFF,CAGEC,KAHF,WAGEA,KAHF,CAIEC,IAJF,WAIEA,IAJF,CAKEC,SALF,WAKEA,SALF,CAMEC,KANF,WAMEA,KANF,CAOEC,KAPF,WAOEA,KAPF,CAQEC,MARF,WAQEA,MARF,CASEC,OATF,WASEA,OATF,CAaA,mBACE,aAAK,KAAK,CAAE,CAACC,SAAS,CAAE,QAAZ,CAAZ,wBACE,yCADF,cAEE,iCAFF,cAGE,aAAK,KAAK,CAAE,CAACC,QAAQ,CAAE,OAAX,CAAZ,wBACE,sBAAOP,IAAP,EADF,kBACsB,sBAAOD,KAAP,EADtB,kBAC2C,sBAAOD,OAAP,EAD3C,kBACkE,sBAAOD,OAAP,EADlE,GAHF,cAME,mBAAII,SAAS,CAAG,SAAH,CAAe,aAA5B,EANF,cAOE,eAAQ,OAAO,CAAEC,KAAjB,mBAPF,cAQE,eAAQ,OAAO,CAAEC,KAAjB,mBARF,cASE,eAAQ,OAAO,CAAEC,MAAjB,oBATF,cAUE,eAAQ,OAAO,CAAE,kBAAM,CACrB;AACA,GAAMI,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACAD,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,GAAoB,GAApC,EACAN,OAAO,CAACG,IAAD,CAAP,CACD,CALD,qBAVF,GADF,CAmBD,CAED,cAAe,SAASI,CAAAA,GAAT,EAAe,CAC5B,GAAMJ,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,EAAb,CACAD,IAAI,CAACE,UAAL,CAAgBF,IAAI,CAACG,UAAL,GAAoB,GAApC,EAA0C;AAC1C,mBACE,kCACE,KAAC,OAAD,EAAS,eAAe,CAAEH,IAA1B,EADF,EADF,CAKD","sourcesContent":["import React from 'react';\nimport { useTimer } from 'react-timer-hook';\n\nfunction MyTimer({ expiryTimestamp }) {\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart,\n  } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called') });\n\n\n  return (\n    <div style={{textAlign: 'center'}}>\n      <h1>react-timer-hook </h1>\n      <p>Timer Demo</p>\n      <div style={{fontSize: '100px'}}>\n        <span>{days}</span>:<span>{hours}</span>:<span>{minutes}</span>:<span>{seconds}</span>\n      </div>\n      <p>{isRunning ? 'Running' : 'Not running'}</p>\n      <button onClick={start}>Start</button>\n      <button onClick={pause}>Pause</button>\n      <button onClick={resume}>Resume</button>\n      <button onClick={() => {\n        // Restarts to 5 minutes timer\n        const time = new Date();\n        time.setSeconds(time.getSeconds() + 300);\n        restart(time)\n      }}>Restart</button>\n    </div>\n  );\n}\n\nexport default function App() {\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 600); // 10 minutes timer\n  return (\n    <div>\n      <MyTimer expiryTimestamp={time} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}